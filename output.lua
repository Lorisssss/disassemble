0020  32000000           sizecode (50)
0024  0A000006           [01] newtable   0   12  0    ; R0 := {} , array=12, hash=0
0028  41000000           [02] loadk      1   0        ; R1 := 616410
002C  81400000           [03] loadk      2   1        ; R2 := 955
0030  C1800000           [04] loadk      3   2        ; R3 := 1075
0034  01C10000           [05] loadk      4   3        ; R4 := 481302
0038  41010100           [06] loadk      5   4        ; R5 := 974
003C  81410100           [07] loadk      6   5        ; R6 := 796
0040  C1810100           [08] loadk      7   6        ; R7 := 130910
0044  01C20100           [09] loadk      8   7        ; R8 := 853
0048  41020200           [10] loadk      9   8        ; R9 := 124
004C  81420200           [11] loadk      10  9        ; R10 := 29258
0050  C1820200           [12] loadk      11  10       ; R11 := 316
0054  01C30200           [13] loadk      12  11       ; R12 := 218
0058  22400006           [14] setlist    0   12  1    ; R0[1 to 12] := R1 to R12
005C  41000300           [15] loadk      1   12       ; R1 := 1
0060  81000300           [16] loadk      2   12       ; R2 := 1
0064  C0000001           [17] move       3   2        ; R3 := R2
0068  01410300           [18] loadk      4   13       ; R4 := 100
006C  41010300           [19] loadk      5   12       ; R5 := 1
0070  E0C00480           [20] forprep    3   20       ; R3 -= R5; PC := 41
0074  D0814303           [21] mod        7   6   270  ; R7 := R6 % 3
0078  1700C303           [22] eq         0   7   268  ; R7 == 1, pc+=1 (goto [24]) if true
007C  16C00080           [23] jmp        4            ; pc+=4 (goto [28])
0080  D0C14301           [24] mod        7   2   271  ; R7 := R2 % 592
0084  0D820188           [25] sub        8   272 6    ; R8 := 1337 - R6
0088  8E008203           [26] mul        2   7   8    ; R2 := R7 * R8
008C  16800080           [27] jmp        3            ; pc+=3 (goto [31])
0090  CE414401           [28] mul        7   2   273  ; R7 := R2 * 58
0094  0C820189           [29] add        8   274 6    ; R8 := 1002 + R6
0098  90008203           [30] mod        2   7   8    ; R2 := R7 % R8
009C  8C004301           [31] add        2   2   268  ; R2 := R2 + 1
00A0  18808189           [32] lt         0   275 6    ; 60 < R6, pc+=1 (goto [34]) if true
00A4  16800180           [33] jmp        7            ; pc+=7 (goto [41])
00A8  C6410000           [34] gettable   7   0   1    ; R7 := R0[R1]
00AC  DA010000           [35] test       7       0    ; if R7 then pc+=1 (goto [37])
00B0  16C00080           [36] jmp        4            ; pc+=4 (goto [41])
00B4  C6410000           [37] gettable   7   0   1    ; R7 := R0[R1]
00B8  CD818003           [38] sub        7   7   2    ; R7 := R7 - R2
00BC  09C08100           [39] settable   0   1   7    ; R0[R1] := R7
00C0  4C00C300           [40] add        1   1   268  ; R1 := R1 + 1
00C4  DF80FA7F           [41] forloop    3   -21      ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
00C8  C5000500           [42] getglobal  3   20       ; R3 := print
00CC  05410500           [43] getglobal  4   21       ; R4 := string
00D0  06814502           [44] gettable   4   4   278  ; R4 := R4["char"]
00D4  45C10500           [45] getglobal  5   23       ; R5 := unpack
00D8  80010000           [46] move       6   0        ; R6 := R0
00DC  5C010001           [47] call       5   2   0    ; R5 to top := R5(R6)
00E0  1C010000           [48] call       4   0   0    ; R4 to top := R4(R5 to top)
00E4  DC400000           [49] call       3   0   1    ;  := R3(R4 to top)
00E8  1E008000           [50] return     0   1        ; return 
